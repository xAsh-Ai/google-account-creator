services:
  google-account-creator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: google-account-creator
    restart: unless-stopped
    
    # 환경 변수
    environment:
      - LOG_LEVEL=INFO
      - DEBUG=false
      - ENVIRONMENT=production
      - WEB_PORT=8080
      - WEB_HOST=0.0.0.0
      - SCREENSHOTS_ENABLED=true
      
    # 포트 매핑
    ports:
      - "8080:8080"   # 웹 대시보드
      - "5555:5555"   # ADB 포트 (선택사항)
    
    # 볼륨 매핑
    volumes:
      # 데이터 영속성
      - ./data:/app/data
      - ./logs:/app/logs
      - ./screenshots:/app/screenshots
      - ./config:/app/config
      
      # 설정 파일들
      - ./.env:/app/.env:ro
      - ./.taskmasterconfig:/app/.taskmasterconfig:ro
      
      # USB 디바이스 접근 (Android 디바이스용)
      - /dev/bus/usb:/dev/bus/usb
      
    # 특권 모드 (ADB 디바이스 접근용)
    privileged: true
    
    # 디바이스 매핑
    devices:
      - /dev/kvm:/dev/kvm  # Android Emulator용 (선택사항)
    
    # 네트워크 설정
    networks:
      - google-account-net
    
    # 헬스체크
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 의존성
    depends_on:
      - redis
      - postgres
    
    # 자원 제한
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Redis (캐싱 및 세션 관리용)
  redis:
    image: redis:7-alpine
    container_name: google-account-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpass}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - google-account-net
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # PostgreSQL (선택사항 - 대규모 데이터용)
  postgres:
    image: postgres:15-alpine
    container_name: google-account-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-google_accounts}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpass}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - google-account-net
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # 모니터링 (선택사항)
  monitoring:
    image: prom/prometheus:latest
    container_name: google-account-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - google-account-net
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

# 네트워크
networks:
  google-account-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 볼륨
volumes:
  redis-data:
  postgres-data:
  prometheus-data: 